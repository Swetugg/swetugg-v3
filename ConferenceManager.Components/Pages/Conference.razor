@page "/{city}/{year:int}"
@using Microsoft.JSInterop
@inject ConferenceService ConferenceService
@inject IJSRuntime JSRuntime

@if(ConferenceEdition is null)
{
    <div>Loading...</div>
}
else
{
    <div class="@City.ToLower()">
        <ConferenceHeader ImageUrl="This will become the image URL" City="@City" Year="@Year"></ConferenceHeader>
        <TextArticle Header="Some text article header" Text="@ConferenceEdition.HeaderInfo.text"></TextArticle>
        @switch (ConferenceEdition.CfpStage)
        {
            //TODO: Create the controls - this is an example flow...
            case CfpStage.Open:
                <CallForSpeakers></CallForSpeakers>
                break;
            case CfpStage.Closed:
                <CfpClosed></CfpClosed>
                break;
            case CfpStage.NotStarted:
                <CfpNotStarted></CfpNotStarted>
                break;
            default:
                <Speakers></Speakers>
                break;
        }
    </div>
}

@code {
    [Parameter] public required string City { get; set; }
    [Parameter] public required int Year { get; set; }

    private ConferenceEdition? ConferenceEdition { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        ConferenceEdition = await ConferenceService.GetConferenceEditionAsync(City, Year);
        //await ChangeColor(ConferenceEdition.MainColor);
    }

    private async Task ChangeColor(string color) 
    { 
        await JSRuntime.InvokeVoidAsync("setGlobalNavColor", color); 
    }

    // private void ChangeColor()
    // { 
    //     //Change the CSS variable value var newColor = "#ff5733"; 
    //     //Example color var style = $"--global-nav-color: {newColor};"; 
    //     var element = (IHtmlElement)Document.QuerySelector(":root"); element.Style.SetProperty("--global-nav-color", newColor); }
    // }
}